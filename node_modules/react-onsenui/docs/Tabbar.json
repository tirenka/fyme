{"description":"@original ons-tabbar\n@category tabbar\n@tutorial react/Reference/tabbar\n@description\n[en] Component to display a tabbar on either the top or the bottom of a page.\nTo define the tabs and the content the property renderTabs need to be implemented, that returns an array of tabs and their content. See the example for specifics. [/en]* [jp][/jp]\n@example\n\n  <Page>\n    <Tabbar\n      onPreChange={() => console.log('preChange')}\n      onPostChange={() => console.log('postChange')}\n      onReactive={() => console.log('postChange')}\n      position='bottom'\n      renderTabs={(activeIndex, tabbar) => [\n        {\n          content: <TabPage title=\"Home\" active={activeIndex === 0} tabbar={tabbar} />,\n          tab: <Tab label=\"Home\" icon=\"md-home\" />\n        },\n        {\n          content: <TabPage title=\"Settings\" active={activeIndex === 1} tabbar={tabbar} />,\n          tab: <Tab label=\"Settings\" icon=\"md-settings\" />\n        }]\n      }\n    />\n  </Page>","methods":[{"name":"handleChange","docblock":null,"modifiers":[],"params":[{"name":"event","type":null}],"returns":null},{"name":"setActiveTab","docblock":"@method setActiveTab\n@signature setActiveTab(index, options)\n@param {Number} index\n  [en]Tab index.[/en]\n  [ja]タブのインデックスを指定します。[/ja]\n@param {Object} [options]\n  [en]Parameter object.[/en]\n  [ja]オプションを指定するオブジェクト。[/ja]\n@param {Boolean} [options.keepPage]\n  [en]If true the page will not be changed.[/en]\n  [ja]タブバーが現在表示しているpageを変えない場合にはtrueを指定します。[/ja]\n@param {String} [options.animation]\n  [en]Animation name. Available animations are `\"fade\"`, `\"slide\"` and `\"none\"`.[/en]\n  [ja]アニメーション名を指定します。`\"fade\"`、`\"slide\"`、`\"none\"`のいずれかを指定できます。[/ja]\n@description\n  [en]Show specified tab page. Animations and other options can be specified by the second parameter.[/en]\n  [ja]指定したインデックスのタブを表示します。アニメーションなどのオプションを指定できます。[/ja]\n@return {Promise}\n  [en]Resolves to the new page element.[/en]\n  [ja][/ja]","modifiers":[],"params":[{"name":"index","description":"[en]Tab index.[/en]\n  [ja]タブのインデックスを指定します。[/ja]","type":{"name":"Number"}},{"name":"options"}],"returns":null,"description":null},{"name":"getActiveTabIndex","docblock":"@method getActiveTabIndex\n@signature getActiveTabIndex()\n@return {Number}\n  [en]The index of the currently active tab.[/en]\n  [ja]現在アクティブになっているタブのインデックスを返します。[/ja]\n@description\n  [en]Returns tab index on current active tab. If active tab is not found, returns -1.[/en]\n  [ja]現在アクティブになっているタブのインデックスを返します。現在アクティブなタブがない場合には-1を返します。[/ja]","modifiers":[],"params":[],"returns":{"description":"[en]The index of the currently active tab.[/en]\n  [ja]現在アクティブになっているタブのインデックスを返します。[/ja]","type":{"name":"Number"}},"description":null}],"props":{"initialIndex":{"type":{"name":"number"},"required":false,"description":"@name initialIndex\n@type number\n@description\n [en] The index of the first tab to show.[/en]\n [jp] [/jp]","defaultValue":{"value":"0","computed":false}},"renderTabs":{"type":{"name":"func"},"required":true,"description":"@name renderTabs\n@type function\n@description\n [en] The index of the first tab to show.[/en]\n [jp] [/jp]"},"position":{"type":{"name":"string"},"required":false,"description":"@name position\n@type string\n@description\n [en] Tabbar's position. Available values are `\"bottom\"` and `\"top\"`. Use `\"auto\"` to choose position depending on platform (iOS bottom, Android top). [/en]\n [jp] [/jp]"},"animation":{"type":{"name":"enum","value":[{"value":"'none'","computed":false},{"value":"'slide'","computed":false},{"value":"'fade'","computed":false}]},"required":false,"description":"@name animation\n@type string\n@description\n [en] Animation name. Available values are `\"none\"`, `\"slide\"` and `\"fade\"`. Default is `\"none\"`. [/en]\n [jp] [/jp]"},"animationOptions":{"type":{"name":"object"},"required":false,"description":"@name animationOptions\n@type object\n@required false\n@description\n [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n [jp] [/jp]"},"onPreChange":{"type":{"name":"func"},"required":false,"description":"@name onPreChange\n@type function\n@description\n [en]Called just before the tab is changed.[/en]\n [jp] [/jp]"},"onPostChange":{"type":{"name":"func"},"required":false,"description":"@name onPostChange\n@type function\n@description\n [en]Called just after the tab is changed.[/en]\n [jp] [/jp]"},"onReactive":{"type":{"name":"func"},"required":false,"description":"@name onReactive\n@type function\n@description\n [en]Called if the already open tab is tapped again.[/en]\n [jp] [/jp]"}}}
